apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  labels:
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
  name: crawler
spec:
  templates:
    - name: katana
      inputs:
        parameters:
          - name: domains
      outputs: {}
      script:
        image: python:3.8
        command:
          - python
        args:
          - '-u'
        source: |
          import json
          import sys
          import urllib.parse
          import urllib.request

          domains = {{`"""{{inputs.parameters.domains}}"""`}}

          url = 'http://crawler-service'  # todo:config
          for domain in domains.split("\n"):
            print("%s ok\n" % domain)
            domain = domain.strip()
            if domain != "":
              domain = "http://" + domain
              request=urllib.request.Request(url, domain.encode())
              reponse=urllib.request.urlopen(request).read()

          # json.dump(domains.split("\n"), sys.stdout)

    - name: katana-binary
      inputs:
        artifacts:
          - name: domains
            path: /tmp/domains
      container:
        image: projectdiscovery/katana:v0.0.2
        args:
          - '-v'
          - '-list'
          - /tmp/domains
          - '-proxy'
          # "leveryd.com" see crawler/coredns-config.yaml
          - 'http://crawler-service.{{.Release.Namespace}}.leveryd.com'

    - name: katana-binary-from-one-url
      inputs:
        parameters:
          - name: url
      container:
        image: projectdiscovery/katana:v0.0.2
        args:
          - '-v'
          - '-u'
          - '{{`{{inputs.parameters.url}}`}}'
          # "leveryd.com" see crawler/coredns-config.yaml
          - 'http://crawler-service.{{.Release.Namespace}}.leveryd.com'

  ttlStrategy:
    secondsAfterCompletion: 3000
  podGC:
    strategy: OnPodCompletion
