apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: util-install-tool
spec:
  entrypoint: install-tool
  templates:
    - name: install-tool
      inputs:
        parameters:
          - name: tool-name
            description: "tools to install, eg 'fofax,enscan,crawlergo,chromium'"
            default: "fofax,enscan,crawlergo,chromium"
          - name: suspend
            description: "suspend for debug after install"
            default: "true"
            enum:
              - "true"
              - "false"
      script:
        image: busybox:glibc
        command:
          - 'sh'
        source: |
          result=$(echo {{`{{inputs.parameters.tool-name}}`}} | grep "fofax")
          if [[ "$result" != "" ]]
          then
            wget https://github.com/xiecat/fofax/releases/download/v0.1.42/fofax_v0.1.42_linux_amd64.tar.gz
            mkdir -p /tmp/tools/fofax
            tar -xvf fofax_v0.1.42_linux_amd64.tar.gz -C /tmp/tools/fofax
            rm fofax_v0.1.42_linux_amd64.tar.gz
            ls -al /tmp/tools/fofax
          else
            echo "ignore install fofax"
          fi

          result=$(echo {{`{{inputs.parameters.tool-name}}`}} | grep "enscan")
          if [[ "$result" != "" ]]
          then
            wget https://github.com/wgpsec/ENScan_GO/releases/download/0.0.10/enscan-0.0.10-linux-amd64.tar.gz
            mkdir -p /tmp/tools/enscan
            tar -xvf enscan-0.0.10-linux-amd64.tar.gz -C /tmp/tools/enscan
            rm enscan-0.0.10-linux-amd64.tar.gz
            ls -al /tmp/tools/enscan
          else
            echo "ignore install enscan"
          fi

          result=$(echo {{`{{inputs.parameters.tool-name}}`}} | grep "crawlergo")
          if [[ "$result" != "" ]]
          then
            wget https://github.com/Qianlitp/crawlergo/releases/download/v0.4.4/crawlergo_linux_amd64
            mkdir -p /tmp/tools/crawlergo
            mv crawlergo_linux_amd64 /tmp/tools/crawlergo/crawlergo
            chmod +x /tmp/tools/crawlergo/crawlergo
            ls -al /tmp/tools/crawlergo
          else
            echo "ignore install crawlergo"
          fi

          result=$(echo {{`{{inputs.parameters.tool-name}}`}} | grep "chromium")
          then
            wget https://registry.npmmirror.com/-/binary/chromium-browser-snapshots/Linux_x64/1108766/chrome-linux.zip
            unzip chrome-linux.zip -d /tmp/tools/crawlergo/
            rm chrome-linux.zip
            ls -al /tmp/tools/crawlergo/chrome-linux
          else
            echo "ignore install chromium"
          fi

          result=$(echo {{`{{inputs.parameters.suspend}}`}} | grep "true")
          if [[ "$result" != "" ]]
          then
              echo "suspend"
              tail -f /dev/null
          else
              echo "not suspend"
          fi

        volumeMounts:
          - name: tools
            mountPath: /tmp/tools
      volumes:
        - name: tools
          persistentVolumeClaim:
            claimName: tools